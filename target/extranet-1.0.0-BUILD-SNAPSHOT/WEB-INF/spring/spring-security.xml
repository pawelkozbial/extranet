<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<debug />

	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/resources/**" security="none" />
	<http auto-config="true" use-expressions="true">
		<form-login login-page="/login" default-target-url=""
			authentication-failure-url="/loginfailed" />
		<logout logout-url="/logout" />
		<!-- User -->
		<!-- <intercept-url pattern="/welcome*" access="hasRole('ROLE_ADMIN')" 
			/> -->
		<intercept-url pattern="/user*" access="permitAll()" />
		<intercept-url pattern="/user/new*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user/delete/**" access="hasRole('ROLE_ADMIN')" />
		<!-- <intercept-url pattern="/user/**" access="isAuthenticated()" /> -->
		<!-- <form-login login-page="/login" /> -->

		<!-- League -->
		<intercept-url pattern="/league/new*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/league/delete/**" access="hasRole('ROLE_ADMIN')" />

		<!-- District -->
		<intercept-url pattern="/district/new*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/district/delete/**" access="hasRole('ROLE_ADMIN')" />

		<!-- Club -->
		<intercept-url pattern="/club/new*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/club/delete/**" access="hasRole('ROLE_ADMIN')" />

		<!-- Game -->
		<intercept-url pattern="/game/new*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/game/addPlayers*" access="hasRole('ROLE_ADMIN')" />

		<access-denied-handler error-page="/403" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder">
				<salt-source ref="saltSource" />
			</password-encoder>
			<!-- <user-service> <user name="pawel" password="123456" authorities="ROLE_USER" 
				/> </user-service> -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email, password, enabled from users where email = ?"
				authorities-by-username-query="select u.email, r.authority from users u join user_roles ur on u.id = ur.user_id 
							join roles r on r.id = ur.role_id and u.email = ? " />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
		<beans:property name="iterations" value="1000" />
	</beans:bean>

	<beans:bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username" />
	</beans:bean>

</beans:beans>